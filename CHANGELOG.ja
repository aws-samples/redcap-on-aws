JP | [EN](./CHANGELOG)

# CHANGELOG

## v1.0.10

- すべてのバケットに対してCORS設定を無効にする。 #68
- ステージのCDK削除ポリシーを更新する。`dev`ステージ/モードでは、すべてのリソースが`destroy`に設定され、`prod`ステージは`retain`に設定され、その他のステージではCDKのデフォルト値が使用される。 #66


## v1.0.9

- EC2 の logGroupName に関連する複数ステージのデプロイメントのバグを修正しました #79 
- パッケージ依存関係の更新

## v1.0.8

- PHP に `opcache` を追加しました
- パッケージ依存関係の更新
- ドキュメント: プライベート サブネットと分離サブネットの適切な名前を使用してアーキテクチャ イメージを更新します。

## v1.0.7

- Docker ベースイメージを php8.2 にアップグレードしました
- パッケージ sst 2.43.3 およびその他の依存関係をアップグレードしました
- AWS WAF の `allowedCountries` を追加して、`stages.ts` で国別にアクセスを制限できるようにしました (例: `allowedCountries: ['JP']`)
- `stage.ts` に、Amazon ECS Fargate、Amazon Aurora RDS、Amazon VPC ログ、AWS Lambda でのログの保持期間を一括で設定するための`generalLogRetention` を追加しました(例: `generalLogRetention: 'one_year'`)
- `stages.ts` に Amazon SES からバウンス通知を受信するための`bounceNotificationEmail` 設定を追加しました

## v1.0.6

- データベースは 0 個以上のリーダーを使用して展開できます。
- データベースのデプロイはスナップショット ID から行うことができます。
- SST 2.42.0 にアップグレードします。
- データベースの初期設定が常に実行される問題を修正しました。

## v1.0.5

- レプリカを有効にして新しいデプロイメントを作成するときのバグ修正
- 開発環境に関するドキュメントを更新。

## v.1.0.4

- パッケージのアップデート
- Amazon Aurora READ レプリカの使用法を修正
- データベース レプリカに関するドキュメントを更新

## v1.0.3

- AWS S3 IAM ユーザーが更新されたときに REDCap データベース設定も更新されるようにする

## v1.0.2

- パッケージのアップデート
- サブドメインを使用して AWS Route 53 にデプロイするための README の更新。

## v1.0.1

- Amazon ECS on AWS Fargate へのREDCapインスタンスのデプロイをサポートするために追加しました。これは、ユーザーのリクエストを120秒以上実行する必要があるユーザー向けです。

### v1.0.1へのアップグレード手順

これは、以前のバージョンをデプロイし、自動的に作成されたAWS App Runnerカスタムリンクドメインを使用している場合に**のみ**適用されます。 例えば、`hostInRoute53: true`および`domain: '<your_redcap_domain>'`でステージ設定をデプロイし、独自のドメイン名でREDCapにアクセスしている場合です。

この場合、CDKによって管理および置換する必要があるRoute 53ホストゾーンにデプロイされたAレコードがあります。

アップグレードの手順は次のとおりです。

1. パッケージの更新をインストールするために`yarn install`を実行します。

2. `stages.ts`ファイルで`domain: <your_redcap_domain>`をコメントアウトまたは削除し、`email: <your_email>`に異なるメール/値を入力します。

3. v1.0.1リリースをデプロイします。

4. `stages.ts`の変更を元に戻します(ドメインと以前のメールを追加)。

5. 変更を完了するために再度デプロイします。

重要: これらの手順により、リンクされたカスタムドメインと新しいメール通知に中断が発生します。

## v1.0.0

- 大規模なREDCapリクエスト/ワークロード用の一時EC2インスタンスをデプロイする新しいスタックを追加しました。

- CDKでのRDSのIAM認証をリファクタリングしました。

- データベース認証ではIAMをデフォルトで使用するように変更しました。

- コンテナの起動時にすべてのシークレットをプルするように変更しました。

- `/survey` チェックのため`にNoUserAgent_HEADER`のWAFルールを許可しました。

- `redcapConfig.sql`は、新しいインスタンスのスポーンや再デプロイ時に再実行されなくなりました。 これは、デプロイ後の構成のリセットを回避するためです。

### 破壊的変更

- dev ステージの Aurora Serverless デプロイ V1 は、現在 Aurora Serverless V2 に置き換えられています。 これはdevステージのみに適用されます。例: yarn dev --stage your_stage。 必要に応じて、完全なデータベースバックアップを実行し、新しいインスタンスでデータを復元してください。


### v1.0.0 へのアップグレード手順

1. データ損失を防ぐために必要に応じてデータベースのバックアップを作成します。

2. パッケージの更新をインストールするために`yarn install`を実行します。

3. AWSコンソールで、AWS App Runnerに移動し、アプリケーションを選択します。 [構成] タブに移動し、デプロイ設定を`Manual`に変更します。 変更が有効になるまで待ちます。 この変更は、この更新が完了した後に自動的に元に戻されます。

4. `stages.ts`のステージ構成に、次のパラメーター `deployTag: 'upgrade-v010'` を追加します。 別のタグ値を使用できます。

5. `yarn deploy --stage <your_stage>`を実行します。

6. `stages.ts`から追加した構成パラメーター `deployTag` を削除します。

## v0.9.0

- Amazon SESと統合されたpostfixをmsmtpに置き換えました。

- 非rootのwww-dataでapache2を起動するようにしました。

- 80以外のポートでApache2が起動できるよう変更しました。

## v0.8.0
- Dockerfileで、Apache2およびMTAの起動方法をリファクタリングしました。

- `stages.ts`ファイルでphpタイムゾーンの構成を許可しました。

## v0.7.0
- Aレコード(単一ドメインの場合)およびCNAME(サブドメインを持つドメインの場合)レコードでApp Runnerドメインをリンクできるようになりました。

- `gen redcap config`から構成される`project_contact_email`のREDCap構成の初期値を設定しました。

- デフォルトのステージ設定をサブドメインなしのドメインで使用するようにしました。

- パッケージのアップグレードを行いました。

## v0.6.0
- データベースパラメータグループで`max_allowed_packet`をデフォルトとして設定しました。

- コードの代わりにルートパスを保護するためのカスタムWAFルールを追加しました。

## v0.5.0
- REDCapのパフォーマンスを向上させるために、いくつかのパラメータグループをデフォルトとして設定しました。

- REDCapのタイムゾーンをJSTに設定しました。

- ルートパスを保護するためのWAFカスタムルールを追加しました。

## v0.4.0
- AWS App Runnerのオートスケーリング名を削除しました。自動生成されます。

- NSレコードで返されたものに基づいて、同じまたは外部のAWSアカウントでNSレコードをリンクするオプションを追加しました。- 